// Copyright 2023 Stephan Friedl. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

#pragma once

#include "minstdconfig.h"

#include <stddef.h>

namespace MINIMAL_STD_NAMESPACE
{
    template <typename T>
    class allocator
    {
    public:
        virtual ~allocator() = default;

        virtual size_t max_size() const noexcept = 0;
        virtual size_t current_size() const noexcept = 0;

        virtual T *allocate(size_t num_elements) = 0;
        virtual void deallocate(T *ptr, size_t num_elements) = 0;
    };
}
